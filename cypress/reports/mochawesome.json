{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-11-24T22:21:44.033Z",
    "end": "2021-11-24T22:24:01.468Z",
    "duration": 137435,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e1d9e90-f358-4ee4-a9d8-d4691825ce05",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e68b797-02d6-4b34-88dd-2950b8c22299",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 55862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5030bda4-22e8-4bf8-aaff-894449ffeed8",
              "parentUUID": "8e68b797-02d6-4b34-88dd-2950b8c22299",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5030bda4-22e8-4bf8-aaff-894449ffeed8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 55862,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "295f213e-78e9-4b8b-a873-e2207837b8c8",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "16dc0817-de79-40e2-92e0-1f93a462bc59",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "7d4fef24-898d-4b01-bfd9-adf2f2e7efc2",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "c0175489-a1d3-4cca-923c-e221c4ae248f",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "84f17fa7-4fa4-44ec-aeba-25e5f03bf3b7",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6f4337f7-551c-43bd-a65a-4c46287054b0",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8dfc38ef-d9f0-493d-8eea-84e78abcf537",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "37fe7240-c40f-491e-9eab-a5f1c09ab3d4",
              "parentUUID": "295f213e-78e9-4b8b-a873-e2207837b8c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16dc0817-de79-40e2-92e0-1f93a462bc59",
            "7d4fef24-898d-4b01-bfd9-adf2f2e7efc2",
            "c0175489-a1d3-4cca-923c-e221c4ae248f",
            "84f17fa7-4fa4-44ec-aeba-25e5f03bf3b7",
            "6f4337f7-551c-43bd-a65a-4c46287054b0",
            "8dfc38ef-d9f0-493d-8eea-84e78abcf537",
            "37fe7240-c40f-491e-9eab-a5f1c09ab3d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1445,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f650d655-111c-4464-af55-a7986363dda9",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "06bf07cf-0d05-42bc-8515-839377b795d0",
              "parentUUID": "f650d655-111c-4464-af55-a7986363dda9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "83aa686e-5580-49ce-914a-8e491a393293",
              "parentUUID": "f650d655-111c-4464-af55-a7986363dda9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06bf07cf-0d05-42bc-8515-839377b795d0",
            "83aa686e-5580-49ce-914a-8e491a393293"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c9ef0d7f-ccbd-4d5b-b9e9-fe535bb8313e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "4680bc86-0414-4576-ab4e-65a6b9a8f10c",
              "parentUUID": "c9ef0d7f-ccbd-4d5b-b9e9-fe535bb8313e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a92829bf-807c-4375-b060-9fd24f422163",
              "parentUUID": "c9ef0d7f-ccbd-4d5b-b9e9-fe535bb8313e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f2115d26-6c20-4dea-9a9f-379c117d21df",
              "parentUUID": "c9ef0d7f-ccbd-4d5b-b9e9-fe535bb8313e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "7bc090ac-0f34-48b9-b6a4-1ae273786484",
              "parentUUID": "c9ef0d7f-ccbd-4d5b-b9e9-fe535bb8313e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4680bc86-0414-4576-ab4e-65a6b9a8f10c",
            "a92829bf-807c-4375-b060-9fd24f422163",
            "f2115d26-6c20-4dea-9a9f-379c117d21df",
            "7bc090ac-0f34-48b9-b6a4-1ae273786484"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 519,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64b4d4f3-020b-41e5-9b73-ef7850f6a09e",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "0cf8e7b0-bafb-4aef-83e5-1b861b0e1857",
              "parentUUID": "64b4d4f3-020b-41e5-9b73-ef7850f6a09e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "62aabf54-5cc2-417a-8228-24d5128f7f9c",
              "parentUUID": "64b4d4f3-020b-41e5-9b73-ef7850f6a09e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cf8e7b0-bafb-4aef-83e5-1b861b0e1857",
            "62aabf54-5cc2-417a-8228-24d5128f7f9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 625,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40b3d5f1-1d16-4321-bd20-e6675b732c41",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "feb63737-4da0-4a03-9950-82f7ca07b84e",
              "parentUUID": "40b3d5f1-1d16-4321-bd20-e6675b732c41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "882560e5-a405-4f32-a04f-2df11e98bae8",
              "parentUUID": "40b3d5f1-1d16-4321-bd20-e6675b732c41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "feb63737-4da0-4a03-9950-82f7ca07b84e",
            "882560e5-a405-4f32-a04f-2df11e98bae8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 189,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9d6493e-6415-45af-92af-4ee4c787a63e",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "26486920-14c9-489d-9c5a-26cebdc96e73",
              "parentUUID": "a9d6493e-6415-45af-92af-4ee4c787a63e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "75d491d6-4b8e-4b9d-a586-f1b9cd2d4799",
              "parentUUID": "a9d6493e-6415-45af-92af-4ee4c787a63e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26486920-14c9-489d-9c5a-26cebdc96e73",
            "75d491d6-4b8e-4b9d-a586-f1b9cd2d4799"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b225b96-4583-4cfa-99bd-dd76a15c0c73",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "8ee5a552-c654-42c6-a88f-4ea09583ffc4",
              "parentUUID": "2b225b96-4583-4cfa-99bd-dd76a15c0c73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8688,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "f6e9672d-ed86-4fcd-ba4f-e21b3069c467",
              "parentUUID": "2b225b96-4583-4cfa-99bd-dd76a15c0c73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "db6c9035-a7f7-49ca-b326-e2c345d9d9ee",
              "parentUUID": "2b225b96-4583-4cfa-99bd-dd76a15c0c73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ee5a552-c654-42c6-a88f-4ea09583ffc4",
            "f6e9672d-ed86-4fcd-ba4f-e21b3069c467",
            "db6c9035-a7f7-49ca-b326-e2c345d9d9ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4de3435b-0bc7-4ba9-ab61-79ffa8ae0391",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "1baf818b-b009-4253-a392-94afeba1aac7",
              "parentUUID": "4de3435b-0bc7-4ba9-ab61-79ffa8ae0391",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "032f19c6-7632-4383-ad73-36ab76d28454",
              "parentUUID": "4de3435b-0bc7-4ba9-ab61-79ffa8ae0391",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "cbf048a8-9b85-4213-8c1d-fc9a0fb71936",
              "parentUUID": "4de3435b-0bc7-4ba9-ab61-79ffa8ae0391",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "61f2d3e9-cce7-49f4-845f-99a35368657a",
              "parentUUID": "4de3435b-0bc7-4ba9-ab61-79ffa8ae0391",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1baf818b-b009-4253-a392-94afeba1aac7",
            "032f19c6-7632-4383-ad73-36ab76d28454",
            "cbf048a8-9b85-4213-8c1d-fc9a0fb71936",
            "61f2d3e9-cce7-49f4-845f-99a35368657a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2727,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4fa84720-ac5a-448f-b42c-95fefb025717",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "98159ff0-8be4-49e9-9f60-935889d81e47",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "df84406d-35fa-4d16-b05a-4a4c45c2c2c5",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4260,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e8fb6e8f-c171-41da-ac3b-306837ec50ce",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4366,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c6d2e9fa-7af8-4181-9393-4927c166980e",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4315,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f4b17e05-9aeb-4cd0-b80d-5d13290879d3",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "78b84b54-7cf7-471f-b5c7-38c9bd59915a",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4301,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a1e44821-9de7-4f8a-8c06-ad35374c911c",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bcfed416-3389-43d2-a147-e6d579ff8c07",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "47d6292a-43ea-4b4a-9ecc-e04dcc9bc426",
              "parentUUID": "4fa84720-ac5a-448f-b42c-95fefb025717",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "98159ff0-8be4-49e9-9f60-935889d81e47",
            "df84406d-35fa-4d16-b05a-4a4c45c2c2c5",
            "e8fb6e8f-c171-41da-ac3b-306837ec50ce",
            "c6d2e9fa-7af8-4181-9393-4927c166980e",
            "f4b17e05-9aeb-4cd0-b80d-5d13290879d3",
            "78b84b54-7cf7-471f-b5c7-38c9bd59915a",
            "a1e44821-9de7-4f8a-8c06-ad35374c911c",
            "bcfed416-3389-43d2-a147-e6d579ff8c07",
            "47d6292a-43ea-4b4a-9ecc-e04dcc9bc426"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38828,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "89ce6950-e219-4ed7-a0d1-32a33ee699db",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b58fe53f-9028-4ce5-a525-87ad3c21ef10",
              "parentUUID": "89ce6950-e219-4ed7-a0d1-32a33ee699db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b5c0c6ae-a421-4632-a04c-d05e45f16117",
              "parentUUID": "89ce6950-e219-4ed7-a0d1-32a33ee699db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42475/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42475/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42475/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42475/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42475/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42475/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42475/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42475/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42475/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42475/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42475/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cfc12501-a15b-4ab4-9c5e-bdf58d39723b",
              "parentUUID": "89ce6950-e219-4ed7-a0d1-32a33ee699db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b58fe53f-9028-4ce5-a525-87ad3c21ef10",
            "b5c0c6ae-a421-4632-a04c-d05e45f16117",
            "cfc12501-a15b-4ab4-9c5e-bdf58d39723b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12943,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f891566a-8267-4189-b62f-4d2b405a3185",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "283d2448-ae29-47ae-a832-460799795657",
              "parentUUID": "f891566a-8267-4189-b62f-4d2b405a3185",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "32eaafe2-1da4-44ad-96c5-a03cb9e403c2",
              "parentUUID": "f891566a-8267-4189-b62f-4d2b405a3185",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "283d2448-ae29-47ae-a832-460799795657",
            "32eaafe2-1da4-44ad-96c5-a03cb9e403c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}